@page "/"

@namespace SalesDashboardBlazor.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

@using Microsoft.AspNetCore.Localization
@using System.Globalization

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, user-scalable=no" />
    <title>SalesDashboardBlazor</title>
    <base href="~/" />
    <link rel="stylesheet" href="Content/bootstrap.min.css" />
    <link rel="stylesheet" href="https://blazor.cdn.telerik.com/blazor/2.27.0/kendo-theme-default/all.css" />
    <link href="Content/Site.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>
    <script src="../Scripts/bootstrap.min.js"></script>

    <script src="https://blazor.cdn.telerik.com/blazor/2.27.0/telerik-blazor.min.js" defer></script>
    <script src="http://kendo.cdn.telerik.com/2021.3.914/js/kendo.all.min.js" defer></script>

    <script>
        function createMap() {
            $("#map").kendoMap({
                zoom: 2,
                layers: [{
                    type: "shape",
                    dataSource: {
                        type: "geojson",
                        transport: {
                            read: "../Content/countries-sales.geo.json"
                        }
                    },
                    style: {
                        fill: {
                            color: "#1996E4"
                        },
                        stroke: {
                            color: "#FFFFFF"
                        }
                    }
                }],
                shapeCreated: onShapeCreated,
                shapeFeatureCreated: onShapeFeatureCreated,
                shapeMouseEnter: onShapeMouseEnter,
                shapeMouseLeave: onShapeMouseLeave,
                shapeClick: onShapeClick,
            });

            $("#map").unbind("mousewheel");
            $("#map").unbind("DOMMouseScroll");

            initUSA();
        }

        function onShapeClick(e) {
            e.shape.options.set("fill.color", "#0c669f");
            e.shape.options.set("stroke.color", "black");
            e.shape.dataItem.properties.selected = true;

            $('#countryName').text(e.shape.dataItem.properties.name);

            $("#myBtn").trigger('click');

            DotNet.invokeMethodAsync('SalesDashboardBlazor', 'GetCountryCustomers', e.shape.dataItem.properties.name)
                .then(message => {
                    $('#countryCustomers').text(message);
                });
        }

        function onShapeCreated(e) {
            if (e.shape.dataItem.id == "USA") {
                //e.shape.dataItem.properties.selected = true;
                //onShapeClick(е);
            }
            //var shape = e.shape;
            //var users = shape.dataItem.properties.users;
            //if (users) {
            //    var color = scale(users).hex();
            //    shape.options.fill.set("color", color);
            //}
        }

        function onShapeFeatureCreated(e) {
            e.group.options.tooltip = {
                content: e.properties.name,
                position: "cursor",
                offset: 10,
                width: 80
            };
        }

        function onShapeMouseEnter(e) {
            e.shape.options.set("fill.color", "#0c669f");
        }

        function onShapeMouseLeave(e) {
            e.shape.options.set("fill.color", "#1996E4");

            if (!e.shape.dataItem.properties.selected) {
                e.shape.options.set("stroke.color", "white");
            }
        }

        //define js function that could be called from razor, result is returned to razor
        function getSelectedCountry() {
            return $('#countryName').text();
        }

        function initUSA() {
            $('#countryName').text('USA');

            DotNet.invokeMethodAsync('SalesDashboardBlazor', 'GetCountryCustomers', 'USA')
                .then(message => {
                    $('#countryCustomers').text(message);
                });

            $("#myBtn").trigger('click');
        }

        //employee

        $(".employee").click(function () {
            $(".employee").addClass("selected");
        });


    </script>

</head>
<body>

    @{
        this.HttpContext.Response.Cookies.Append(CookieRequestCultureProvider.DefaultCookieName,
            CookieRequestCultureProvider.MakeCookieValue(new RequestCulture(CultureInfo.CurrentCulture, CultureInfo.CurrentUICulture))
        );
    }

    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
</body>
</html>
